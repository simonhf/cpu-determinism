Dump of assembler code for function burn_cpu:
   0x0000000000001fc0 <+0>:	endbr64 
   0x0000000000001fc4 <+4>:	push   %r12
   0x0000000000001fc6 <+6>:	push   %rbp
   0x0000000000001fc7 <+7>:	push   %rbx
   0x0000000000001fc8 <+8>:	mov    %edi,%ebx
   0x0000000000001fca <+10>:	mov    $0x1,%edi
   0x0000000000001fcf <+15>:	sub    $0x30,%rsp
   0x0000000000001fd3 <+19>:	mov    %fs:0x28,%rax
   0x0000000000001fdc <+28>:	mov    %rax,0x28(%rsp)
   0x0000000000001fe1 <+33>:	xor    %eax,%eax
   0x0000000000001fe3 <+35>:	lea    0x10(%rsp),%r12
   0x0000000000001fe8 <+40>:	movq   $0x0,0x8(%rsp)
   0x0000000000001ff1 <+49>:	mov    %r12,%rsi
   0x0000000000001ff4 <+52>:	call   0x1160 <clock_gettime@plt>
   0x0000000000001ff9 <+57>:	mov    0x10(%rsp),%rbp
   0x0000000000001ffe <+62>:	mov    0x18(%rsp),%rax
   0x0000000000002003 <+67>:	sub    0x3d56(%rip),%rbp        # 0x5d60 <ts_start>
   0x000000000000200a <+74>:	sub    0x3d57(%rip),%rax        # 0x5d68 <ts_start+8>
   0x0000000000002011 <+81>:	jns    0x201d <burn_cpu+93>
   0x0000000000002013 <+83>:	sub    $0x1,%rbp
   0x0000000000002017 <+87>:	add    $0x3b9aca00,%rax
   0x000000000000201d <+93>:	imul   $0x3b9aca00,%rbp,%rbp
   0x0000000000002024 <+100>:	add    %rax,%rbp
   0x0000000000002027 <+103>:	nopw   0x0(%rax,%rax,1)
   0x0000000000002030 <+112>:	mov    0x8(%rsp),%rax
   0x0000000000002035 <+117>:	sub    $0x1,%ebx
   0x0000000000002038 <+120>:	add    $0x1,%rax
   0x000000000000203c <+124>:	mov    %rax,0x8(%rsp)
   0x0000000000002041 <+129>:	test   %ebx,%ebx
   0x0000000000002043 <+131>:	jg     0x2030 <burn_cpu+112>
   0x0000000000002045 <+133>:	mov    %r12,%rsi
   0x0000000000002048 <+136>:	mov    $0x1,%edi
   0x000000000000204d <+141>:	call   0x1160 <clock_gettime@plt>
   0x0000000000002052 <+146>:	mov    0x18(%rsp),%rax
   0x0000000000002057 <+151>:	sub    0x3d0a(%rip),%rax        # 0x5d68 <ts_start+8>
   0x000000000000205e <+158>:	mov    %rax,%rdx
   0x0000000000002061 <+161>:	mov    0x10(%rsp),%rax
   0x0000000000002066 <+166>:	js     0x2098 <burn_cpu+216>
   0x0000000000002068 <+168>:	sub    0x3cf1(%rip),%rax        # 0x5d60 <ts_start>
   0x000000000000206f <+175>:	imul   $0x3b9aca00,%rax,%rax
   0x0000000000002076 <+182>:	add    %rdx,%rax
   0x0000000000002079 <+185>:	sub    %rbp,%rax
   0x000000000000207c <+188>:	mov    0x28(%rsp),%rdx
   0x0000000000002081 <+193>:	sub    %fs:0x28,%rdx
   0x000000000000208a <+202>:	jne    0x20ac <burn_cpu+236>
   0x000000000000208c <+204>:	add    $0x30,%rsp
   0x0000000000002090 <+208>:	pop    %rbx
   0x0000000000002091 <+209>:	pop    %rbp
   0x0000000000002092 <+210>:	pop    %r12
   0x0000000000002094 <+212>:	ret    
   0x0000000000002095 <+213>:	nopl   (%rax)
   0x0000000000002098 <+216>:	sub    0x3cc1(%rip),%rax        # 0x5d60 <ts_start>
   0x000000000000209f <+223>:	add    $0x3b9aca00,%rdx
   0x00000000000020a6 <+230>:	sub    $0x1,%rax
   0x00000000000020aa <+234>:	jmp    0x206f <burn_cpu+175>
   0x00000000000020ac <+236>:	call   0x1170 <__stack_chk_fail@plt>
End of assembler dump.
